"use client";
import { Canvas, useFrame } from "@react-three/fiber";
import { motion, useScroll, useTransform } from "framer-motion";
import { useRef, useMemo } from "react";
import * as THREE from "three";

const MeshGrid = () => {
  const meshRef = useRef<THREE.Mesh>(null);
  
  useFrame(({ clock }) => {
    if (meshRef.current) {
      meshRef.current.rotation.z = Math.sin(clock.getElapsedTime() * 0.3) * 0.2;
      meshRef.current.rotation.x = Math.cos(clock.getElapsedTime() * 0.3) * 0.2;
    }
  });

  const meshGeometry = useMemo(() => {
    const geometry = new THREE.PlaneGeometry(3, 3, 30, 30);
    geometry.rotateX(-Math.PI / 2);
    return geometry;
  }, []);

  return (
    <mesh ref={meshRef} geometry={meshGeometry}>
      <meshStandardMaterial
        wireframe
        color="cyan"
        emissive="cyan"
        emissiveIntensity={1.5}
        roughness={0.1}
        metalness={0.5}
      />
    </mesh>
  );
};

const Scroll3D = () => {
  const ref = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({
    target: ref,
    offset: ["start start", "end start"],
  });

  // Subtle scroll transformations
  const scrollRotation = useTransform(scrollYProgress, [0, 1], [0, Math.PI * 2]);
  const scrollScale = useTransform(scrollYProgress, [0, 1], [1, 1.1]);

  return (
    <motion.section
      ref={ref}
      className="h-screen bg-black flex items-center justify-center"
      style={{ rotateY: scrollRotation, scale: scrollScale }}
    >
      <Canvas>
        <ambientLight intensity={0.3} />
        <pointLight position={[3, 3, 3]} intensity={2} />
        <MeshGrid />
      </Canvas>
    </motion.section>
  );
};

export default Scroll3D;
